buildscript {      // Configuration for building
	repositories {
		jcenter()      // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.3.0'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'org.springframework.boot'

group = 'com.nttdata.gpc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	runtime {
		exclude group: 'org.slf4j', module: 'jul-to-slf4j'
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	providedCompile 'javax.servlet:jstl:1.2'
	providedCompile 'org.springframework.boot:spring-boot-starter-jetty'

	implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
	implementation 'org.springframework.cloud:spring-cloud-starter:2.2.3.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

if (System.getenv('GC_KEY')) {
	appengine {
		deploy {   // deploy configuration
			projectId = "project-test-01-282013"
			version = "appbuild-0-0-1-13"
			stopPreviousVersion = false  // default - stop the current version
			promote = false              // default - & make this the current version
		}

		tools {
			serviceAccountKeyFile = System.getenv('GC_KEY')
		}
	}
} else {
	appengine {
		deploy {   // deploy configuration
			projectId = "project-test-01-282013"
			version = "appbuild-0-0-1-13"
			stopPreviousVersion = false  // default - stop the current version
			promote = false              // default - & make this the current version
		}
	}
}

